#!/usr/bin/env node
'use strict';

var 
    path = require('path'),
    u = require('util'),
    fse = require('fs-extra'),
    _ = require('lodash'),
    program = require('commander'),
    debug = require('debug')('build'),
    clean = require('./build_lib/clean'),
    distclean = require('./build_lib/distclean'),
    build = require('./build_lib/build'),
    dist = require('./build_lib/dist'),

    baseDir = process.cwd(),
    config,
    srcDirs,
    tmpDirs,
    distDirs,
    slash_re = /\//g;

_.str = require('underscore.string');
_.mixin(_.str.exports());

config = {
  debug: false,
  actions: [],
  baseDir: baseDir,
  bootstrapDir: path.join(baseDir, 'cavea-bootstrap'),

  tmpDir: path.join(baseDir, 'tmp'),
  srcDir: path.join(baseDir, 'src'),
  distDir: path.join(baseDir, 'dist')
};


config.tasks = [
  {
    key: 'css',
    source: path.join(config.bootstrapDir, 'less', 'cavea.less'),
    destDir: 'dist/web/assets/css'
  },

  {
    key: 'copy',
    filesets: [
      { 
        fromFile: path.join(config.bootstrapDir, 'dist', 'js', 'bootstrap.min.js'),
        toFile: 'dist/web/assets/lib/bootstrap.js'
      },
      {
        fromGlob: 'src/web/assets/lib/*.js',
        toDir: 'dist/web/assets/lib'
      }
    ]
  }

]



program
  .option('-d, --debug')

program.command('clean')
  .description('Cleans the tmp directory.')
  .action(function() {
    config.actions.push('clean');
  });

program.command('distclean')
  .description('Cleans both the tmp and dist directories.')
  .action(function() {
    config.actions.push('clean');
    config.actions.push('distclean');
  });
 
program.command('build')
  .description('Builds the documents.')
  .action(function() {
    config.actions.push('build');
  });

// program.command('dist')
//   .description('Creates the distribution.')
//   .action(function() {
//     config.actions.push('dist');
//   });


program.parse(process.argv);

if (program.debug) {
  console.log('Enabling debugging output.');
  config.debug = true;
}


if (config.actions.length === 0) {
  config.actions.push('build');
  // config.actions.push('dist');
}

console.log(u.inspect(config, {depth: 4}));

_.each(config.actions, function(action) {
  switch (action) {
    case 'clean':
      clean(config);
      break;

    case 'distclean':
      distclean(config);
      break;

    case 'build':
      build(config, function(err) {
        'use strict';
        if (err) throw err;
      });
      break;

    // case 'dist':
    //   dist(config);
    //   break;
  }
});




// vim: set filetype=javascript :
